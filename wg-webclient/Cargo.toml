[package]
name = "wg-webclient"
version = "0.1.0"
authors = ["Frederic Henrichs <frederic@tinkerforge.com>"]
edition = "2021"
description = "A wasm library to provide a fetch/ws api that is tunneled through Wireguard."
repository = "https://github.com/Tinkerforge/esp32-remote-access"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.84"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

boringtun = { git = "https://github.com/Tinkerforge/boringtun.git", rev = "784f8739adb99fc82799b9e704d5801ccf938afb", default-features = false }
getrandom = { version = "0.2.11", features = ["js"] }
rand_core = "0.6.4"
anyhow = { version = "1.0.79", default-features = false}
js-sys = "0.3.66"
wasm-timer = "0.2.5"
http = "1.0.0"
tungstenite = "0.21.0"

# Instant::now from smoltcp, enabled by the std-feature must not be used since it will crash in wasm32
smoltcp = { version = "0.11.0", default-features = false, features = ["proto-ipv4", "medium-ip", "socket-tcp", "std"] }
web-sys = { version = "0.3.66", features = ["WebSocket",
    "Window", "FileReader",
    "Document",
    "Element",
    "HtmlElement",
    "Performance",
    "MessageEvent",
    "CustomEventInit",
    "CustomEvent",
    "Headers",
    "ResponseInit",
    "Response",
    "WorkerGlobalScope",
    "Request",
    "AddEventListenerOptions" ]}


pcap-file = "2.0.0"
base64 = "0.21.6"
gloo-file = "0.3.0"
hyper = { version = "1.1.0", features = ["client", "http1"] }
wasm-bindgen-futures = "0.4.39"
http-body-util = "0.1.0"
futures = "0.3.30"
flate2 = "1.0.28"

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
lto = true
strip = true
