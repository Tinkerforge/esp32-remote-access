
upstream host_service {
    server 172.17.0.1:8081;
}
server {
    listen 80 default_server;

    gzip on;
    gzip_types text/plain text/javascript application/javascript text/css

    index index.html;
    location / {
        root /usr/share/nginx/html;

        # This is due to nginx and the try_files behavior below, it will always
        # try to hit the index as part of try_files.  If I set index as something
        # that doesn't resolve, we don't have to worry about index.html being cached.
        #
        # If frequent updates occur, it's important that index.html not be cached
        # in the browser.  Otherwise the software update will only occur when the
        # cached page expires.  The If-Modified-Since is a better way to handle this
        # for SPAs with frequent updates.
        index unresolvable-file-html.html;
        try_files $uri @index;
    }

    # This seperate location is so the no cache policy only applies to the index and nothing else.
    location @index {
        root /usr/share/nginx/html;
        add_header Cache-Control no-cache;
        expires 0;
        try_files /index.html =404;
    }

    location /api/ {
        proxy_pass http://host_service/;

        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $realip_remote_addr;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
}

server {
    listen 443 ssl;
    server_name localhost;
    ssl_certificate /usr/share/nginx/certs/cert.pem;
    ssl_certificate_key /usr/share/nginx/certs/key.pem;

    ssl_protocols       TLSv1.3 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    gzip on;
    gzip_types text/plain text/javascript application/javascript text/css

    index index.html;
    location / {
        root /usr/share/nginx/html;

        # This is due to nginx and the try_files behavior below, it will always
        # try to hit the index as part of try_files.  If I set index as something
        # that doesn't resolve, we don't have to worry about index.html being cached.
        #
        # If frequent updates occur, it's important that index.html not be cached
        # in the browser.  Otherwise the software update will only occur when the
        # cached page expires.  The If-Modified-Since is a better way to handle this
        # for SPAs with frequent updates.
        index unresolvable-file-html.html;
        try_files $uri @index;
    }

    # This seperate location is so the no cache policy only applies to the index and nothing else.
    location @index {
        root /usr/share/nginx/html;
        add_header Cache-Control no-cache;
        expires 0;
        try_files /index.html =404;
    }

    location /api/ {
        proxy_pass http://host_service/;

        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $realip_remote_addr;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
}
